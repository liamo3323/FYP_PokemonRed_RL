diff --git a/run_baseline_v2.py b/run_baseline_v2.py
index 575b292..455f53d 100644
--- a/run_baseline_v2.py
+++ b/run_baseline_v2.py
@@ -55,7 +55,7 @@ def make_model(algorithm):
 if __name__ == "__main__":
     current_datetime_str = datetime.datetime.now().strftime("%m%d%H%M%S")
     use_wandb_logging = True
-    algorithm = "PPO"
+    algorithm = "A2C"
     batch_size = 128
     gamma = 0.998
     n_epochs = 3
@@ -65,19 +65,17 @@ if __name__ == "__main__":
     sess_path = Path(f'Sessions/{algorithm}_Session_{current_datetime_str}_{sess_id}_env2_1')
     # sess_path = Path(f'Sessions/PPO_Session_0307161249_7602f77b_env2_2')
     print(sess_path)
-
-    num_cpu = 13  #! cannot go any higher than 12 <- also crashes after 3-4 hours
+    
+    num_cpu = 8  #! cannot go any higher than 12 <- also crashes after 3-4 hours
     episode_length_per_cpu = 1500 #? each episode will be 1250 steps long 
-    ep_length = num_cpu * episode_length_per_cpu #? EPISODE LENGTH WILL BE 19,500
-    total_timesteps = (ep_length)*2051 #? TOTAL TRAINING TIME WILL BE 40,000,000 (approx)
-
-    # env_config = {
-    #             'headless': True, 'save_final_state': True, 'early_stop': False,
-    #             'action_freq': 24, 'init_state': 'has_pokedex_nballs.state', 'max_steps': ep_length, 
-    #             'print_rewards': True, 'save_video': False, 'fast_video': True, 'session_path': sess_path,
-    #             'gb_path': 'PokemonRed.gb', 'debug': False, 'reward_scale': 4, 'explore_weight': 3, 'battle_weight': 1,
-    #             'use_screen_explore': True, 'extra_buttons': False, 'sim_frame_dist': 2_000_000.0,
-    #         }
+    mil_timestep = 40
+
+
+    target_total_timesteps = mil_timestep * 1000 * 1000 # Approx how many timesteps in the total training 
+    ep_length = num_cpu * episode_length_per_cpu #? EPISODE LENGTH <- episode for each cpu * num_cpu
+    num_runs_total = round(target_total_timesteps/ep_length) # the number of training batches all CPUs must complete
+    total_timesteps = ep_length*num_runs_total #? TOTAL TRAINING TIME WILL BE 40,000,000 (approx)
+    print(f"\n CPUs: {num_cpu} \n Episode Length per CPU: {episode_length_per_cpu} \n Total Batches: {num_runs_total} \n Total Timesteps: {total_timesteps}")
 
     env_config = {
             'headless': True, 'save_final_state': True, 'early_stop': False,
