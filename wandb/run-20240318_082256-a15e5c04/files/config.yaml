wandb_version: 1

headless:
  desc: null
  value: true
save_final_state:
  desc: null
  value: true
early_stop:
  desc: null
  value: false
action_freq:
  desc: null
  value: 24
init_state:
  desc: null
  value: has_pokedex_nballs.state
max_steps:
  desc: null
  value: 27500
print_rewards:
  desc: null
  value: true
save_video:
  desc: null
  value: false
fast_video:
  desc: null
  value: true
session_path:
  desc: null
  value: Sessions/PPO_Session_0318082251_a15e5c04_env2_1
gb_path:
  desc: null
  value: PokemonRed.gb
debug:
  desc: null
  value: false
reward_scale:
  desc: null
  value: 1.5
explore_weight:
  desc: null
  value: 3
use_screen_explore:
  desc: null
  value: true
extra_buttons:
  desc: null
  value: false
sim_frame_dist:
  desc: null
  value: 2000000.0
battle_weight:
  desc: null
  value: 3
_wandb:
  desc: null
  value:
    code_path: code/run_baseline_v2.py
    python_version: 3.11.7
    cli_version: 0.15.12
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: true
    start_time: 1710750176.796223
    t:
      1:
      - 1
      - 2
      - 3
      - 12
      - 55
      2:
      - 1
      - 2
      - 3
      - 12
      - 55
      3:
      - 2
      - 14
      - 16
      - 22
      - 23
      - 35
      4: 3.11.7
      5: 0.15.12
      8:
      - 2
      - 5
      13: linux-x86_64
algo:
  desc: null
  value: PPO
policy_class:
  desc: null
  value: <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>
device:
  desc: null
  value: cuda
verbose:
  desc: null
  value: 1
policy_kwargs:
  desc: null
  value: '{}'
num_timesteps:
  desc: null
  value: 0
_total_timesteps:
  desc: null
  value: 22000000
_num_timesteps_at_start:
  desc: null
  value: 0
seed:
  desc: null
  value: None
action_noise:
  desc: null
  value: None
start_time:
  desc: null
  value: 1710750178507337495
learning_rate:
  desc: null
  value: 0.0003
tensorboard_log:
  desc: null
  value: Sessions/PPO_Session_0318082251_a15e5c04_env2_1
_last_obs:
  desc: null
  value: "OrderedDict([('badges', array([[0, 0, 0, 0, 0, 0, 0, 0],\n       [0, 0,\
    \ 0, 0, 0, 0, 0, 0],\n       [0, 0, 0, 0, 0, 0, 0, 0],\n       [0, 0, 0, 0, 0,\
    \ 0, 0, 0],\n       [0, 0, 0, 0, 0, 0, 0, 0],\n       [0, 0, 0, 0, 0, 0, 0, 0],\n\
    \       [0, 0, 0, 0, 0, 0, 0, 0],\n       [0, 0, 0, 0, 0, 0, 0, 0],\n       [0,\
    \ 0, 0, 0, 0, 0, 0, 0],\n       [0, 0, 0, 0, 0, 0, 0, 0],\n       [0, 0, 0, 0,\
    \ 0, 0, 0, 0]], dtype=int8)), ('events', array([[0, 0, 0, ..., 0, 0, 0],\n   \
    \    [0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       ...,\n\
    \       [0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       [0,\
    \ 0, 0, ..., 0, 0, 0]], dtype=int8)), ('health', array([[1.],\n       [1.],\n\
    \       [1.],\n       [1.],\n       [1.],\n       [1.],\n       [1.],\n      \
    \ [1.],\n       [1.],\n       [1.],\n       [1.]])), ('level', array([[ 0.11971221,\
    \  0.23770263,  0.46177918,  0.81919157,  0.93964547,\n        -0.64299874,  0.98490333,\
    \  0.34098385],\n       [ 0.11971221,  0.23770263,  0.46177918,  0.81919157, \
    \ 0.93964547,\n        -0.64299874,  0.98490333,  0.34098385],\n       [ 0.11971221,\
    \  0.23770263,  0.46177918,  0.81919157,  0.93964547,\n        -0.64299874,  0.98490333,\
    \  0.34098385],\n       [ 0.11971221,  0.23770263,  0.46177918,  0.81919157, \
    \ 0.93964547,\n        -0.64299874,  0.98490333,  0.34098385],\n       [ 0.11971221,\
    \  0.23770263,  0.46177918,  0.81919157,  0.93964547,\n        -0.64299874,  0.98490333,\
    \  0.34098385],\n       [ 0.11971221,  0.23770263,  0.46177918,  0.81919157, \
    \ 0.93964547,\n        -0.64299874,  0.98490333,  0.34098385],\n       [ 0.11971221,\
    \  0.23770263,  0.46177918,  0.81919157,  0.93964547,\n        -0.64299874,  0.98490333,\
    \  0.34098385],\n       [ 0.11971221,  0.23770263,  0.46177918,  0.81919157, \
    \ 0.93964547,\n        -0.64299874,  0.98490333,  0.34098385],\n       [ 0.11971221,\
    \  0.23770263,  0.46177918,  0.81919157,  0.93964547,\n        -0.64299874,  0.98490333,\
    \  0.34098385],\n       [ 0.11971221,  0.23770263,  0.46177918,  0.81919157, \
    \ 0.93964547,\n        -0.64299874,  0.98490333,  0.34098385],\n       [ 0.11971221,\
    \  0.23770263,  0.46177918,  0.81919157,  0.93964547,\n        -0.64299874,  0.98490333,\
    \  0.34098385]])), ('map', array([[[[0, 0, 0, ..., 0, 0, 0],\n         [0, 0,\
    \ 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n         ...,\n      \
    \   [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n         [0,\
    \ 0, 0, ..., 0, 0, 0]]],\n\n\n       [[[0, 0, 0, ..., 0, 0, 0],\n         [0,\
    \ 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n         ...,\n   \
    \      [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n         [0,\
    \ 0, 0, ..., 0, 0, 0]]],\n\n\n       [[[0, 0, 0, ..., 0, 0, 0],\n         [0,\
    \ 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n         ...,\n   \
    \      [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n         [0,\
    \ 0, 0, ..., 0, 0, 0]]],\n\n\n       ...,\n\n\n       [[[0, 0, 0, ..., 0, 0, 0],\n\
    \         [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n      \
    \   ...,\n         [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n\
    \         [0, 0, 0, ..., 0, 0, 0]]],\n\n\n       [[[0, 0, 0, ..., 0, 0, 0],\n\
    \         [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n      \
    \   ...,\n         [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n\
    \         [0, 0, 0, ..., 0, 0, 0]]],\n\n\n       [[[0, 0, 0, ..., 0, 0, 0],\n\
    \         [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n      \
    \   ...,\n         [0, 0, 0, ..., 0, 0, 0],\n         [0, 0, 0, ..., 0, 0, 0],\n\
    \         [0, 0, 0, ..., 0, 0, 0]]]], dtype=uint8)), ('recent_actions', array([[0,\
    \ 0, 0],\n       [0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0],\n       [0,\
    \ 0, 0],\n       [0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0],\n       [0,\
    \ 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]], dtype=uint8)), ('screens', array([[[[\
    \  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,\
    \   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         ...,\n      \
    \   [ 42, 153, 153, ...,   0,   0,   0],\n         [ 21,  76,  76, ...,   0, \
    \  0,   0],\n         [ 59,  76,  76, ...,   0,   0,   0]],\n\n        [[  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n\
    \         [  0,   0,   0, ...,   0,   0,   0],\n         ...,\n         [  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n\
    \         [  0,   0,   0, ...,   0,   0,   0]],\n\n        [[  0,   0,   0, ...,\
    \   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [ \
    \ 0,   0,   0, ...,   0,   0,   0],\n         ...,\n         [  0,   0,   0, ...,\
    \   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [ \
    \ 0,   0,   0, ...,   0,   0,   0]]],\n\n\n       [[[  0,   0,   0, ...,   0,\
    \   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,  \
    \ 0,   0, ...,   0,   0,   0],\n         ...,\n         [ 42, 153, 153, ..., \
    \  0,   0,   0],\n         [ 21,  76,  76, ...,   0,   0,   0],\n         [ 59,\
    \  76,  76, ...,   0,   0,   0]],\n\n        [[  0,   0,   0, ...,   0,   0, \
    \  0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0,\
    \ ...,   0,   0,   0],\n         ...,\n         [  0,   0,   0, ...,   0,   0,\
    \   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,  \
    \ 0, ...,   0,   0,   0]],\n\n        [[  0,   0,   0, ...,   0,   0,   0],\n\
    \         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,\
    \   0,   0,   0],\n         ...,\n         [  0,   0,   0, ...,   0,   0,   0],\n\
    \         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,\
    \   0,   0,   0]]],\n\n\n       [[[  0,   0,   0, ...,   0,   0,   0],\n     \
    \    [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,\
    \   0,   0],\n         ...,\n         [ 42, 153, 153, ...,   0,   0,   0],\n \
    \        [ 21,  76,  76, ...,   0,   0,   0],\n         [ 59,  76,  76, ..., \
    \  0,   0,   0]],\n\n        [[  0,   0,   0, ...,   0,   0,   0],\n         [\
    \  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,\
    \   0],\n         ...,\n         [  0,   0,   0, ...,   0,   0,   0],\n      \
    \   [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0, \
    \  0,   0]],\n\n        [[  0,   0,   0, ...,   0,   0,   0],\n         [  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n\
    \         ...,\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0]]],\n\
    \n\n       ...,\n\n\n       [[[  0,   0,   0, ...,   0,   0,   0],\n         [\
    \  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,\
    \   0],\n         ...,\n         [ 42, 153, 153, ...,   0,   0,   0],\n      \
    \   [ 21,  76,  76, ...,   0,   0,   0],\n         [ 59,  76,  76, ...,   0, \
    \  0,   0]],\n\n        [[  0,   0,   0, ...,   0,   0,   0],\n         [  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n\
    \         ...,\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0]],\n\
    \n        [[  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,\
    \   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         ...,\n\
    \         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,\
    \   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0]]],\n\n\n     \
    \  [[[  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,\
    \   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         ...,\n \
    \        [ 42, 153, 153, ...,   0,   0,   0],\n         [ 21,  76,  76, ..., \
    \  0,   0,   0],\n         [ 59,  76,  76, ...,   0,   0,   0]],\n\n        [[\
    \  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,\
    \   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         ...,\n      \
    \   [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0, \
    \  0,   0],\n         [  0,   0,   0, ...,   0,   0,   0]],\n\n        [[  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n\
    \         [  0,   0,   0, ...,   0,   0,   0],\n         ...,\n         [  0,\
    \   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n\
    \         [  0,   0,   0, ...,   0,   0,   0]]],\n\n\n       [[[  0,   0,   0,\
    \ ...,   0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n      \
    \   [  0,   0,   0, ...,   0,   0,   0],\n         ...,\n         [ 42, 153, 153,\
    \ ...,   0,   0,   0],\n         [ 21,  76,  76, ...,   0,   0,   0],\n      \
    \   [ 59,  76,  76, ...,   0,   0,   0]],\n\n        [[  0,   0,   0, ...,   0,\
    \   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,  \
    \ 0,   0, ...,   0,   0,   0],\n         ...,\n         [  0,   0,   0, ..., \
    \  0,   0,   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,\
    \   0,   0, ...,   0,   0,   0]],\n\n        [[  0,   0,   0, ...,   0,   0, \
    \  0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,   0,\
    \ ...,   0,   0,   0],\n         ...,\n         [  0,   0,   0, ...,   0,   0,\
    \   0],\n         [  0,   0,   0, ...,   0,   0,   0],\n         [  0,   0,  \
    \ 0, ...,   0,   0,   0]]]], dtype=uint8))])"
_last_episode_starts:
  desc: null
  value: '[ True  True  True  True  True  True  True  True  True  True  True]'
_last_original_obs:
  desc: null
  value: None
_episode_num:
  desc: null
  value: 0
use_sde:
  desc: null
  value: 'False'
sde_sample_freq:
  desc: null
  value: -1
_current_progress_remaining:
  desc: null
  value: 1.0
_stats_window_size:
  desc: null
  value: 100
ep_info_buffer:
  desc: null
  value: deque([], maxlen=100)
ep_success_buffer:
  desc: null
  value: deque([], maxlen=100)
_n_updates:
  desc: null
  value: 0
_custom_logger:
  desc: null
  value: 'False'
env:
  desc: null
  value: <stable_baselines3.common.vec_env.vec_transpose.VecTransposeImage object
    at 0x7f30c6b29690>
_vec_normalize_env:
  desc: null
  value: None
observation_space:
  desc: null
  value: 'Dict(''badges'': MultiBinary(8), ''events'': MultiBinary(1400), ''health'':
    Box(0.0, 1.0, (1,), float32), ''level'': Box(-1.0, 1.0, (8,), float32), ''map'':
    Box(0, 255, (1, 48, 48), uint8), ''recent_actions'': MultiDiscrete([7 7 7]), ''screens'':
    Box(0, 255, (3, 72, 80), uint8))'
action_space:
  desc: null
  value: Discrete(7)
n_envs:
  desc: null
  value: 11
n_steps:
  desc: null
  value: 27500
gamma:
  desc: null
  value: 0.998
gae_lambda:
  desc: null
  value: 0.95
ent_coef:
  desc: null
  value: 0.0
vf_coef:
  desc: null
  value: 0.5
max_grad_norm:
  desc: null
  value: 0.5
batch_size:
  desc: null
  value: 128
n_epochs:
  desc: null
  value: 3
clip_range:
  desc: null
  value: <function constant_fn.<locals>.func at 0x7f307b46b920>
clip_range_vf:
  desc: null
  value: None
normalize_advantage:
  desc: null
  value: 'True'
target_kl:
  desc: null
  value: None
lr_schedule:
  desc: null
  value: <function constant_fn.<locals>.func at 0x7f307b46b7e0>
rollout_buffer:
  desc: null
  value: <stable_baselines3.common.buffers.DictRolloutBuffer object at 0x7f307b472d10>
policy:
  desc: null
  value: "MultiInputActorCriticPolicy(\n  (features_extractor): CombinedExtractor(\n\
    \    (extractors): ModuleDict(\n      (badges): Flatten(start_dim=1, end_dim=-1)\n\
    \      (events): Flatten(start_dim=1, end_dim=-1)\n      (health): Flatten(start_dim=1,\
    \ end_dim=-1)\n      (level): Flatten(start_dim=1, end_dim=-1)\n      (map): NatureCNN(\n\
    \        (cnn): Sequential(\n          (0): Conv2d(1, 32, kernel_size=(8, 8),\
    \ stride=(4, 4))\n          (1): ReLU()\n          (2): Conv2d(32, 64, kernel_size=(4,\
    \ 4), stride=(2, 2))\n          (3): ReLU()\n          (4): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1))\n          (5): ReLU()\n          (6): Flatten(start_dim=1,\
    \ end_dim=-1)\n        )\n        (linear): Sequential(\n          (0): Linear(in_features=256,\
    \ out_features=256, bias=True)\n          (1): ReLU()\n        )\n      )\n  \
    \    (recent_actions): Flatten(start_dim=1, end_dim=-1)\n      (screens): NatureCNN(\n\
    \        (cnn): Sequential(\n          (0): Conv2d(3, 32, kernel_size=(8, 8),\
    \ stride=(4, 4))\n          (1): ReLU()\n          (2): Conv2d(32, 64, kernel_size=(4,\
    \ 4), stride=(2, 2))\n          (3): ReLU()\n          (4): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1))\n          (5): ReLU()\n          (6): Flatten(start_dim=1,\
    \ end_dim=-1)\n        )\n        (linear): Sequential(\n          (0): Linear(in_features=1920,\
    \ out_features=256, bias=True)\n          (1): ReLU()\n        )\n      )\n  \
    \  )\n  )\n  (pi_features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n\
    \      (badges): Flatten(start_dim=1, end_dim=-1)\n      (events): Flatten(start_dim=1,\
    \ end_dim=-1)\n      (health): Flatten(start_dim=1, end_dim=-1)\n      (level):\
    \ Flatten(start_dim=1, end_dim=-1)\n      (map): NatureCNN(\n        (cnn): Sequential(\n\
    \          (0): Conv2d(1, 32, kernel_size=(8, 8), stride=(4, 4))\n          (1):\
    \ ReLU()\n          (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n \
    \         (3): ReLU()\n          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
    \ 1))\n          (5): ReLU()\n          (6): Flatten(start_dim=1, end_dim=-1)\n\
    \        )\n        (linear): Sequential(\n          (0): Linear(in_features=256,\
    \ out_features=256, bias=True)\n          (1): ReLU()\n        )\n      )\n  \
    \    (recent_actions): Flatten(start_dim=1, end_dim=-1)\n      (screens): NatureCNN(\n\
    \        (cnn): Sequential(\n          (0): Conv2d(3, 32, kernel_size=(8, 8),\
    \ stride=(4, 4))\n          (1): ReLU()\n          (2): Conv2d(32, 64, kernel_size=(4,\
    \ 4), stride=(2, 2))\n          (3): ReLU()\n          (4): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1))\n          (5): ReLU()\n          (6): Flatten(start_dim=1,\
    \ end_dim=-1)\n        )\n        (linear): Sequential(\n          (0): Linear(in_features=1920,\
    \ out_features=256, bias=True)\n          (1): ReLU()\n        )\n      )\n  \
    \  )\n  )\n  (vf_features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n\
    \      (badges): Flatten(start_dim=1, end_dim=-1)\n      (events): Flatten(start_dim=1,\
    \ end_dim=-1)\n      (health): Flatten(start_dim=1, end_dim=-1)\n      (level):\
    \ Flatten(start_dim=1, end_dim=-1)\n      (map): NatureCNN(\n        (cnn): Sequential(\n\
    \          (0): Conv2d(1, 32, kernel_size=(8, 8), stride=(4, 4))\n          (1):\
    \ ReLU()\n          (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n \
    \         (3): ReLU()\n          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
    \ 1))\n          (5): ReLU()\n          (6): Flatten(start_dim=1, end_dim=-1)\n\
    \        )\n        (linear): Sequential(\n          (0): Linear(in_features=256,\
    \ out_features=256, bias=True)\n          (1): ReLU()\n        )\n      )\n  \
    \    (recent_actions): Flatten(start_dim=1, end_dim=-1)\n      (screens): NatureCNN(\n\
    \        (cnn): Sequential(\n          (0): Conv2d(3, 32, kernel_size=(8, 8),\
    \ stride=(4, 4))\n          (1): ReLU()\n          (2): Conv2d(32, 64, kernel_size=(4,\
    \ 4), stride=(2, 2))\n          (3): ReLU()\n          (4): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1))\n          (5): ReLU()\n          (6): Flatten(start_dim=1,\
    \ end_dim=-1)\n        )\n        (linear): Sequential(\n          (0): Linear(in_features=1920,\
    \ out_features=256, bias=True)\n          (1): ReLU()\n        )\n      )\n  \
    \  )\n  )\n  (mlp_extractor): MlpExtractor(\n    (policy_net): Sequential(\n \
    \     (0): Linear(in_features=1950, out_features=64, bias=True)\n      (1): Tanh()\n\
    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=1950, out_features=64,\
    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
    \ out_features=7, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
    \ bias=True)\n)"
_logger:
  desc: null
  value: <stable_baselines3.common.logger.Logger object at 0x7f307b5d01d0>
